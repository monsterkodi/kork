###
 0000000   0000000   000   000  00000000
000       000   000  000   000  000     
0000000   000000000   000 000   0000000 
     000  000   000     000     000     
0000000   000   000      0      00000000
###

Immutable = require 'seamless-immutable'

function Save

    @: ->
        
        @s = Immutable {}
            
        post.on 'save'   @onSave
        post.on 'load'   @onLoad
        post.on 'reload' @onLoad
        
    onSave: => 

        prefs.set 'save' @currentState()
        
    # 000   000   0000000    0000000   000   000  
    # 0000  000  000   000  000   000  0000  000  
    # 000 0 000  000   000  000   000  000 0 000  
    # 000  0000  000   000  000   000  000  0000  
    # 000   000   0000000    0000000   000   000  
    
    toNoon: -> noon.stringify @currentState(), circular:true
        
    currentState: ->
        
        state = {}

        # childs = world.scene.children.filter (child) -> child.toSave is func
        # for child in childs
            # state[child.toSave.key][child.name] = child.toSave()
            
        {}
        
    # 000       0000000    0000000   0000000    
    # 000      000   000  000   000  000   000  
    # 000      000   000  000000000  000   000  
    # 000      000   000  000   000  000   000  
    # 0000000   0000000   000   000  0000000    
    
    onLoad: =>
        
        save = prefs.get 'save'
        return if not save
        oldNoon = noon.stringify save, circular:true
        
        # log oldNoon
        
        world.clear()
        
        newNoon = @toNoon()
        if newNoon != oldNoon
            log 'DAFUK?' 
            # log 'old:' oldNoon 
            # log 'new:' newNoon

        # log newNoon
        # world.animate 0
            
module.exports = Save
